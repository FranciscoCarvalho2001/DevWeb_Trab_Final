// <auto-generated />
using System;
using DevWeb_Trab_Final.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DevWeb_Trab_Final.Migrations
{
    [DbContext(typeof(DevWeb_Trab_FinalContext))]
    [Migration("20230530103035_newAtributes")]
    partial class newAtributes
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DevWeb_Trab_Final.Models.Clientes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Morada")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NIF")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telemovel")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.Property<string>("codPostal")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("DevWeb_Trab_Final.Models.Dispositivos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClienteFK")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataReg")
                        .HasColumnType("datetime2");

                    b.Property<string>("Foto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClienteFK");

                    b.ToTable("Dispositivos");
                });

            modelBuilder.Entity("DevWeb_Trab_Final.Models.Funcionarios", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Especializacao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FuncionariosId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Telemovel")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FuncionariosId");

                    b.ToTable("Funcionarios");
                });

            modelBuilder.Entity("DevWeb_Trab_Final.Models.Reparacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Custo")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataFim")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("datetime2");

                    b.Property<int>("DispositivoFK")
                        .HasColumnType("int");

                    b.Property<string>("Foto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FuncionariosFK")
                        .HasColumnType("int");

                    b.Property<string>("Observacao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DispositivoFK");

                    b.HasIndex("FuncionariosFK");

                    b.ToTable("Reparacao");
                });

            modelBuilder.Entity("DevWeb_Trab_Final.Models.Dispositivos", b =>
                {
                    b.HasOne("DevWeb_Trab_Final.Models.Clientes", "Cliente")
                        .WithMany("ListaDipositivos")
                        .HasForeignKey("ClienteFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("DevWeb_Trab_Final.Models.Funcionarios", b =>
                {
                    b.HasOne("DevWeb_Trab_Final.Models.Funcionarios", null)
                        .WithMany("ListaRepara")
                        .HasForeignKey("FuncionariosId");
                });

            modelBuilder.Entity("DevWeb_Trab_Final.Models.Reparacao", b =>
                {
                    b.HasOne("DevWeb_Trab_Final.Models.Dispositivos", "Dispositivo")
                        .WithMany("ListaReparacao")
                        .HasForeignKey("DispositivoFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DevWeb_Trab_Final.Models.Funcionarios", "Funcionarios")
                        .WithMany()
                        .HasForeignKey("FuncionariosFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dispositivo");

                    b.Navigation("Funcionarios");
                });

            modelBuilder.Entity("DevWeb_Trab_Final.Models.Clientes", b =>
                {
                    b.Navigation("ListaDipositivos");
                });

            modelBuilder.Entity("DevWeb_Trab_Final.Models.Dispositivos", b =>
                {
                    b.Navigation("ListaReparacao");
                });

            modelBuilder.Entity("DevWeb_Trab_Final.Models.Funcionarios", b =>
                {
                    b.Navigation("ListaRepara");
                });
#pragma warning restore 612, 618
        }
    }
}
